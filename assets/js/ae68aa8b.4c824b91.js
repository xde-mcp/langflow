"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[8927],{19680:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/starter-flow-simple-agent-71d0dec218a5da8e3110c51716f1c91e.png"},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>h});var s=n(96540);const r={},d=s.createContext(r);function i(e){const t=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function h(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(d.Provider,{value:t},e.children)}},57819:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>h,default:()=>a,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Components/components-agents","title":"Agents","description":"Agent components define the behavior and capabilities of AI agents in your flow.","source":"@site/docs/Components/components-agents.md","sourceDirName":"Components","slug":"/components-agents","permalink":"/components-agents","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Agents","slug":"/components-agents"},"sidebar":"docs","previous":{"title":"Voice mode","permalink":"/concepts-voice-mode"},"next":{"title":"Bundles","permalink":"/components-bundle-components"}}');var r=n(74848),d=n(28453);const i={title:"Agents",slug:"/components-agents"},h="Agent components in Langflow",l={},c=[{value:"Use an agent in a flow",id:"use-an-agent-in-a-flow",level:2},{value:"Agent component",id:"agent-component",level:2},{value:"Legacy components",id:"legacy-components",level:2},{value:"JSON Agent",id:"json-agent",level:3},{value:"Vector Store Agent",id:"vector-store-agent",level:3},{value:"Vector Store Router Agent",id:"vector-store-router-agent",level:3},{value:"Moved components",id:"moved-components",level:2},{value:"CrewAI Agent",id:"crewai-agent",level:3},{value:"Hierarchical Crew",id:"hierarchical-crew",level:3},{value:"CSV Agent",id:"csv-agent",level:3},{value:"OpenAI Tools Agent",id:"openai-tools-agent",level:3},{value:"OpenAPI Agent",id:"openapi-agent",level:3},{value:"Sequential Crew",id:"sequential-crew",level:3},{value:"Sequential task agent",id:"sequential-task-agent",level:3},{value:"SQL Agent",id:"sql-agent",level:3},{value:"Tool Calling Agent",id:"tool-calling-agent",level:3},{value:"XML Agent",id:"xml-agent",level:3}];function o(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components},{Details:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"agent-components-in-langflow",children:"Agent components in Langflow"})}),"\n",(0,r.jsx)(t.p,{children:"Agent components define the behavior and capabilities of AI agents in your flow."}),"\n",(0,r.jsx)(t.p,{children:"Agents use LLMs as a reasoning engine to decide which of the connected tool components to use to solve a problem."}),"\n",(0,r.jsxs)(t.p,{children:["Tools in agentic functions are essentially functions that the agent can call to perform tasks or access external resources.\nA function is wrapped as a ",(0,r.jsx)(t.code,{children:"Tool"})," object with a common interface the agent understands.\nAgents become aware of tools through tool registration where the agent is provided a list of available tools typically at agent initialization. The ",(0,r.jsx)(t.code,{children:"Tool"})," object's description tells the agent what the tool can do."]}),"\n",(0,r.jsx)(t.p,{children:"The agent then uses a connected LLM to reason through the problem to decide which tool is best for the job."}),"\n",(0,r.jsx)(t.h2,{id:"use-an-agent-in-a-flow",children:"Use an agent in a flow"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.a,{href:"/starter-projects-simple-agent",children:"simple agent starter project"})," uses an ",(0,r.jsx)(t.a,{href:"#agent-component",children:"agent component"})," connected to URL and Calculator tools to answer a user's questions. The OpenAI LLM acts as a brain for the agent to decide which tool to use. Tools are connected to agent components at the ",(0,r.jsx)(t.strong,{children:"Tools"})," port."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Simple agent starter flow",src:n(19680).A+"",width:"1732",height:"1748"})}),"\n",(0,r.jsxs)(t.p,{children:["For a multi-agent example see, ",(0,r.jsx)(t.a,{href:"/agents-tool-calling-agent-component",children:"Create a problem-solving agent"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"agent-component",children:"Agent component"}),"\n",(0,r.jsx)(t.p,{children:"This component creates an agent that can use tools to answer questions and perform tasks based on given instructions."}),"\n",(0,r.jsxs)(t.p,{children:["The component includes an LLM model integration, a system message prompt, and a ",(0,r.jsx)(t.strong,{children:"Tools"})," port to connect tools to extend its capabilities."]}),"\n",(0,r.jsxs)(t.p,{children:["For more information on this component, see the ",(0,r.jsx)(t.a,{href:"/agents-tool-calling-agent-component",children:"tool calling agent documentation"}),"."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent_llm"}),(0,r.jsx)(t.td,{children:"Dropdown"}),(0,r.jsx)(t.td,{children:"The provider of the language model that the agent uses to generate responses. Options include OpenAI and other providers or Custom."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"system_prompt"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The system prompt provides initial instructions and context to guide the agent's behavior."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"tools"}),(0,r.jsx)(t.td,{children:"List"}),(0,r.jsx)(t.td,{children:"The list of tools available for the agent to use."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"input_value"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The input task or question for the agent to process."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"add_current_date_tool"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"When true this adds a tool to the agent that returns the current date."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"memory"}),(0,r.jsx)(t.td,{children:"Memory"}),(0,r.jsx)(t.td,{children:"An optional memory configuration for maintaining conversation history."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"max_iterations"}),(0,r.jsx)(t.td,{children:"Integer"}),(0,r.jsx)(t.td,{children:"The maximum number of iterations the agent can perform."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"handle_parsing_errors"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"This determines whether to handle parsing errors during agent execution."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"verbose"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"This enables verbose output for detailed logging."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"response"}),(0,r.jsx)(t.td,{children:"Message"}),(0,r.jsx)(t.td,{children:"The agent's response to the given input task."})]})})]})]}),"\n",(0,r.jsx)(t.h2,{id:"legacy-components",children:"Legacy components"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Legacy"})," components are available for use but are no longer supported."]}),"\n",(0,r.jsx)(t.h3,{id:"json-agent",children:"JSON Agent"}),"\n",(0,r.jsx)(t.p,{children:"This component creates a JSON agent from a JSON or YAML file and an LLM."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"llm"}),(0,r.jsx)(t.td,{children:"LanguageModel"}),(0,r.jsx)(t.td,{children:"The language model to use for the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"path"}),(0,r.jsx)(t.td,{children:"File"}),(0,r.jsx)(t.td,{children:"The path to the JSON or YAML file."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent"}),(0,r.jsx)(t.td,{children:"AgentExecutor"}),(0,r.jsx)(t.td,{children:"The JSON agent instance."})]})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"vector-store-agent",children:"Vector Store Agent"}),"\n",(0,r.jsx)(t.p,{children:"This component creates a Vector Store Agent using LangChain."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"llm"}),(0,r.jsx)(t.td,{children:"LanguageModel"}),(0,r.jsx)(t.td,{children:"The language model to use for the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"vectorstore"}),(0,r.jsx)(t.td,{children:"VectorStoreInfo"}),(0,r.jsx)(t.td,{children:"The vector store information for the agent to use."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent"}),(0,r.jsx)(t.td,{children:"AgentExecutor"}),(0,r.jsx)(t.td,{children:"The Vector Store Agent instance."})]})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"vector-store-router-agent",children:"Vector Store Router Agent"}),"\n",(0,r.jsx)(t.p,{children:"This component creates a Vector Store Router Agent using LangChain."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"llm"}),(0,r.jsx)(t.td,{children:"LanguageModel"}),(0,r.jsx)(t.td,{children:"The language model to use for the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"vectorstores"}),(0,r.jsx)(t.td,{children:"List[VectorStoreInfo]"}),(0,r.jsx)(t.td,{children:"The list of vector store information for the agent to route between."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent"}),(0,r.jsx)(t.td,{children:"AgentExecutor"}),(0,r.jsx)(t.td,{children:"The Vector Store Router Agent instance."})]})})]})]}),"\n",(0,r.jsx)(t.h2,{id:"moved-components",children:"Moved components"}),"\n",(0,r.jsxs)(t.p,{children:["The following components are available under ",(0,r.jsx)(t.strong,{children:"Bundles"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"crewai-agent",children:"CrewAI Agent"}),"\n",(0,r.jsx)(t.p,{children:"This component represents an Agent of CrewAI allowing for the creation of specialized AI agents with defined roles goals and capabilities within a crew."}),"\n",(0,r.jsxs)(t.p,{children:["For more information, see the ",(0,r.jsx)(t.a,{href:"https://docs.crewai.com/core-concepts/Agents/",children:"CrewAI documentation"}),"."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"role"}),(0,r.jsx)(t.td,{children:"Role"}),(0,r.jsx)(t.td,{children:"The role of the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"goal"}),(0,r.jsx)(t.td,{children:"Goal"}),(0,r.jsx)(t.td,{children:"The objective of the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"backstory"}),(0,r.jsx)(t.td,{children:"Backstory"}),(0,r.jsx)(t.td,{children:"The backstory of the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"tools"}),(0,r.jsx)(t.td,{children:"Tools"}),(0,r.jsx)(t.td,{children:"The tools at the agent's disposal."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"llm"}),(0,r.jsx)(t.td,{children:"Language Model"}),(0,r.jsx)(t.td,{children:"The language model that runs the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"memory"}),(0,r.jsx)(t.td,{children:"Memory"}),(0,r.jsx)(t.td,{children:"This determines whether the agent should have memory or not."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"verbose"}),(0,r.jsx)(t.td,{children:"Verbose"}),(0,r.jsx)(t.td,{children:"This enables verbose output."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"allow_delegation"}),(0,r.jsx)(t.td,{children:"Allow Delegation"}),(0,r.jsx)(t.td,{children:"This determines whether the agent is allowed to delegate tasks to other agents."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"allow_code_execution"}),(0,r.jsx)(t.td,{children:"Allow Code Execution"}),(0,r.jsx)(t.td,{children:"This determines whether the agent is allowed to execute code."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"kwargs"}),(0,r.jsx)(t.td,{children:"kwargs"}),(0,r.jsx)(t.td,{children:"Additional keyword arguments for the agent."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"output"}),(0,r.jsx)(t.td,{children:"Agent"}),(0,r.jsx)(t.td,{children:"The constructed CrewAI Agent object."})]})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"hierarchical-crew",children:"Hierarchical Crew"}),"\n",(0,r.jsx)(t.p,{children:"This component represents a group of agents managing how they should collaborate and the tasks they should perform in a hierarchical structure. This component allows for the creation of a crew with a manager overseeing the task execution."}),"\n",(0,r.jsxs)(t.p,{children:["For more information, see the ",(0,r.jsx)(t.a,{href:"https://docs.crewai.com/how-to/Hierarchical/",children:"CrewAI documentation"}),"."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agents"}),(0,r.jsx)(t.td,{children:"Agents"}),(0,r.jsx)(t.td,{children:"The list of Agent objects representing the crew members."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"tasks"}),(0,r.jsx)(t.td,{children:"Tasks"}),(0,r.jsx)(t.td,{children:"The list of HierarchicalTask objects representing the tasks to be executed."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"manager_llm"}),(0,r.jsx)(t.td,{children:"Manager LLM"}),(0,r.jsx)(t.td,{children:"The language model for the manager agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"manager_agent"}),(0,r.jsx)(t.td,{children:"Manager Agent"}),(0,r.jsx)(t.td,{children:"The specific agent to act as the manager."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"verbose"}),(0,r.jsx)(t.td,{children:"Verbose"}),(0,r.jsx)(t.td,{children:"This enables verbose output for detailed logging."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"memory"}),(0,r.jsx)(t.td,{children:"Memory"}),(0,r.jsx)(t.td,{children:"The memory configuration for the crew."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"use_cache"}),(0,r.jsx)(t.td,{children:"Use Cache"}),(0,r.jsx)(t.td,{children:"This enables caching of results."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"max_rpm"}),(0,r.jsx)(t.td,{children:"Max RPM"}),(0,r.jsx)(t.td,{children:"This sets the maximum requests per minute."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"share_crew"}),(0,r.jsx)(t.td,{children:"Share Crew"}),(0,r.jsx)(t.td,{children:"This determines if the crew information is shared among agents."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"function_calling_llm"}),(0,r.jsx)(t.td,{children:"Function Calling LLM"}),(0,r.jsx)(t.td,{children:"The language model for function calling."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"crew"}),(0,r.jsx)(t.td,{children:"Crew"}),(0,r.jsx)(t.td,{children:"The constructed Crew object with hierarchical task execution."})]})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"csv-agent",children:"CSV Agent"}),"\n",(0,r.jsx)(t.p,{children:"This component creates a CSV agent from a CSV file and LLM."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"llm"}),(0,r.jsx)(t.td,{children:"LanguageModel"}),(0,r.jsx)(t.td,{children:"The language model to use for the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"path"}),(0,r.jsx)(t.td,{children:"File"}),(0,r.jsx)(t.td,{children:"The path to the CSV file."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent_type"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The type of agent to create."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent"}),(0,r.jsx)(t.td,{children:"AgentExecutor"}),(0,r.jsx)(t.td,{children:"The CSV agent instance."})]})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"openai-tools-agent",children:"OpenAI Tools Agent"}),"\n",(0,r.jsx)(t.p,{children:"This component creates an OpenAI Tools Agent."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"llm"}),(0,r.jsx)(t.td,{children:"LanguageModel"}),(0,r.jsx)(t.td,{children:"The language model to use."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"tools"}),(0,r.jsx)(t.td,{children:"List of Tools"}),(0,r.jsx)(t.td,{children:"The tools to give the agent access to."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"system_prompt"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The system prompt to provide context to the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"input_value"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The user's input to the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"memory"}),(0,r.jsx)(t.td,{children:"Memory"}),(0,r.jsx)(t.td,{children:"The memory for the agent to use for context persistence."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"max_iterations"}),(0,r.jsx)(t.td,{children:"Integer"}),(0,r.jsx)(t.td,{children:"The maximum number of iterations to allow the agent to execute."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"verbose"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"This determines whether to print out the agent's intermediate steps."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"handle_parsing_errors"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"This determines whether to handle parsing errors in the agent."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent"}),(0,r.jsx)(t.td,{children:"AgentExecutor"}),(0,r.jsx)(t.td,{children:"The OpenAI Tools agent instance."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"output"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The output from executing the agent on the input."})]})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"openapi-agent",children:"OpenAPI Agent"}),"\n",(0,r.jsx)(t.p,{children:"This component creates an agent for interacting with OpenAPI services."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"llm"}),(0,r.jsx)(t.td,{children:"LanguageModel"}),(0,r.jsx)(t.td,{children:"The language model to use."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"openapi_spec"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The OpenAPI specification for the service."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"base_url"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The base URL for the API."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"headers"}),(0,r.jsx)(t.td,{children:"Dict"}),(0,r.jsx)(t.td,{children:"The optional headers for API requests."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent_executor_kwargs"}),(0,r.jsx)(t.td,{children:"Dict"}),(0,r.jsx)(t.td,{children:"The optional parameters for the agent executor."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent"}),(0,r.jsx)(t.td,{children:"AgentExecutor"}),(0,r.jsx)(t.td,{children:"The OpenAPI agent instance."})]})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"sequential-crew",children:"Sequential Crew"}),"\n",(0,r.jsx)(t.p,{children:"This component represents a group of agents with tasks that are executed sequentially. This component allows for the creation of a crew that performs tasks in a specific order."}),"\n",(0,r.jsxs)(t.p,{children:["For more information, see the ",(0,r.jsx)(t.a,{href:"https://docs.crewai.com/how-to/Sequential/",children:"CrewAI documentation"}),"."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"tasks"}),(0,r.jsx)(t.td,{children:"Tasks"}),(0,r.jsx)(t.td,{children:"The list of SequentialTask objects representing the tasks to be executed."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"verbose"}),(0,r.jsx)(t.td,{children:"Verbose"}),(0,r.jsx)(t.td,{children:"This enables verbose output for detailed logging."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"memory"}),(0,r.jsx)(t.td,{children:"Memory"}),(0,r.jsx)(t.td,{children:"The memory configuration for the crew."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"use_cache"}),(0,r.jsx)(t.td,{children:"Use Cache"}),(0,r.jsx)(t.td,{children:"This enables caching of results."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"max_rpm"}),(0,r.jsx)(t.td,{children:"Max RPM"}),(0,r.jsx)(t.td,{children:"This sets the maximum requests per minute."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"share_crew"}),(0,r.jsx)(t.td,{children:"Share Crew"}),(0,r.jsx)(t.td,{children:"This determines if the crew information is shared among agents."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"function_calling_llm"}),(0,r.jsx)(t.td,{children:"Function Calling LLM"}),(0,r.jsx)(t.td,{children:"The language model for function calling."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"crew"}),(0,r.jsx)(t.td,{children:"Crew"}),(0,r.jsx)(t.td,{children:"The constructed Crew object with sequential task execution."})]})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"sequential-task-agent",children:"Sequential task agent"}),"\n",(0,r.jsx)(t.p,{children:"This component creates a CrewAI Task and its associated Agent allowing for the definition of sequential tasks with specific agent roles and capabilities."}),"\n",(0,r.jsxs)(t.p,{children:["For more information, see the ",(0,r.jsx)(t.a,{href:"https://docs.crewai.com/how-to/Sequential/",children:"CrewAI documentation"}),"."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"role"}),(0,r.jsx)(t.td,{children:"Role"}),(0,r.jsx)(t.td,{children:"The role of the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"goal"}),(0,r.jsx)(t.td,{children:"Goal"}),(0,r.jsx)(t.td,{children:"The objective of the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"backstory"}),(0,r.jsx)(t.td,{children:"Backstory"}),(0,r.jsx)(t.td,{children:"The backstory of the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"tools"}),(0,r.jsx)(t.td,{children:"Tools"}),(0,r.jsx)(t.td,{children:"The tools at the agent's disposal."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"llm"}),(0,r.jsx)(t.td,{children:"Language Model"}),(0,r.jsx)(t.td,{children:"The language model that runs the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"memory"}),(0,r.jsx)(t.td,{children:"Memory"}),(0,r.jsx)(t.td,{children:"This determines whether the agent should have memory or not."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"verbose"}),(0,r.jsx)(t.td,{children:"Verbose"}),(0,r.jsx)(t.td,{children:"This enables verbose output."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"allow_delegation"}),(0,r.jsx)(t.td,{children:"Allow Delegation"}),(0,r.jsx)(t.td,{children:"This determines whether the agent is allowed to delegate tasks to other agents."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"allow_code_execution"}),(0,r.jsx)(t.td,{children:"Allow Code Execution"}),(0,r.jsx)(t.td,{children:"This determines whether the agent is allowed to execute code."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent_kwargs"}),(0,r.jsx)(t.td,{children:"Agent kwargs"}),(0,r.jsx)(t.td,{children:"The additional kwargs for the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"task_description"}),(0,r.jsx)(t.td,{children:"Task Description"}),(0,r.jsx)(t.td,{children:"The descriptive text detailing the task's purpose and execution."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"expected_output"}),(0,r.jsx)(t.td,{children:"Expected Task Output"}),(0,r.jsx)(t.td,{children:"The clear definition of the expected task outcome."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"async_execution"}),(0,r.jsx)(t.td,{children:"Async Execution"}),(0,r.jsx)(t.td,{children:"The boolean flag indicating asynchronous task execution."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"previous_task"}),(0,r.jsx)(t.td,{children:"Previous Task"}),(0,r.jsx)(t.td,{children:"The previous task in the sequence for chaining."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"task_output"}),(0,r.jsx)(t.td,{children:"Sequential Task"}),(0,r.jsx)(t.td,{children:"The list of SequentialTask objects representing the created tasks."})]})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"sql-agent",children:"SQL Agent"}),"\n",(0,r.jsx)(t.p,{children:"This component creates an agent for interacting with SQL databases."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"llm"}),(0,r.jsx)(t.td,{children:"LanguageModel"}),(0,r.jsx)(t.td,{children:"The language model to use."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"database"}),(0,r.jsx)(t.td,{children:"Database"}),(0,r.jsx)(t.td,{children:"The SQL database connection."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"top_k"}),(0,r.jsx)(t.td,{children:"Integer"}),(0,r.jsx)(t.td,{children:"The number of results to return from a SELECT query."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"use_tools"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"This determines whether to use tools for query execution."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"return_intermediate_steps"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"This determines whether to return the agent's intermediate steps."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"max_iterations"}),(0,r.jsx)(t.td,{children:"Integer"}),(0,r.jsx)(t.td,{children:"The maximum number of iterations to run the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"max_execution_time"}),(0,r.jsx)(t.td,{children:"Integer"}),(0,r.jsx)(t.td,{children:"The maximum execution time in seconds."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"early_stopping_method"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The method to use for early stopping."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"verbose"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"This determines whether to print the agent's thoughts."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent"}),(0,r.jsx)(t.td,{children:"AgentExecutor"}),(0,r.jsx)(t.td,{children:"The SQL agent instance."})]})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"tool-calling-agent",children:"Tool Calling Agent"}),"\n",(0,r.jsx)(t.p,{children:"This component creates an agent for structured tool calling with various language models."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"llm"}),(0,r.jsx)(t.td,{children:"LanguageModel"}),(0,r.jsx)(t.td,{children:"The language model to use."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"tools"}),(0,r.jsx)(t.td,{children:"List[Tool]"}),(0,r.jsx)(t.td,{children:"The list of tools available to the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"system_message"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The system message to use for the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"return_intermediate_steps"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"This determines whether to return the agent's intermediate steps."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"max_iterations"}),(0,r.jsx)(t.td,{children:"Integer"}),(0,r.jsx)(t.td,{children:"The maximum number of iterations to run the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"max_execution_time"}),(0,r.jsx)(t.td,{children:"Integer"}),(0,r.jsx)(t.td,{children:"The maximum execution time in seconds."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"early_stopping_method"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The method to use for early stopping."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"verbose"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"This determines whether to print the agent's thoughts."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent"}),(0,r.jsx)(t.td,{children:"AgentExecutor"}),(0,r.jsx)(t.td,{children:"The tool calling agent instance."})]})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"xml-agent",children:"XML Agent"}),"\n",(0,r.jsx)(t.p,{children:"This component creates an XML Agent using LangChain."}),"\n",(0,r.jsx)(t.p,{children:"The agent uses XML formatting for tool instructions to the Language Model."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"llm"}),(0,r.jsx)(t.td,{children:"LanguageModel"}),(0,r.jsx)(t.td,{children:"The language model to use for the agent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"user_prompt"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The custom prompt template for the agent with XML formatting instructions."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"tools"}),(0,r.jsx)(t.td,{children:"List[Tool]"}),(0,r.jsx)(t.td,{children:"The list of tools available to the agent."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent"}),(0,r.jsx)(t.td,{children:"AgentExecutor"}),(0,r.jsx)(t.td,{children:"The XML Agent instance."})]})})]})]})]})}function a(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);