"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[9836],{17286:(n,e,t)=>{t.d(e,{A:()=>l});const l=t.p+"assets/images/starter-flow-travel-agent-a7119af3c35c0a13a7321377ddbd0bde.png"},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>i});var l=t(96540);const s={},a=l.createContext(s);function r(n){const e=l.useContext(a);return l.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),l.createElement(a.Provider,{value:e},n.children)}},92196:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"Sample-Flows/travel-planning-agent","title":"Travel planning agent","description":"Build a Travel Planning Agent flow for an agentic application using the multiple Tool-calling agents.","source":"@site/docs/Sample-Flows/travel-planning-agent.md","sourceDirName":"Sample-Flows","slug":"/travel-planning-agent","permalink":"/travel-planning-agent","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Travel planning agent","slug":"/travel-planning-agent"},"sidebar":"docs","previous":{"title":"Sequential tasks agent","permalink":"/sequential-agent"},"next":{"title":"Langflow overview","permalink":"/concepts-overview"}}');var s=t(74848),a=t(28453);const r={title:"Travel planning agent",slug:"/travel-planning-agent"},i=void 0,o={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Open Langflow and start a new flow",id:"open-langflow-and-start-a-new-flow",level:2},{value:"Create the travel planning agent flow",id:"create-the-travel-planning-agent-flow",level:2},{value:"Run the travel planning agent flow",id:"run-the-travel-planning-agent-flow",level:2}];function h(n){const e={a:"a",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:["Build a ",(0,s.jsx)(e.strong,{children:"Travel Planning Agent"})," flow for an agentic application using the multiple Tool-calling agents."]}),"\n",(0,s.jsxs)(e.p,{children:["An ",(0,s.jsx)(e.strong,{children:"agent"}),' uses an LLM as its "brain" to select among the connected tools and complete its tasks.']}),"\n",(0,s.jsxs)(e.p,{children:["In this flow, multiple ",(0,s.jsx)(e.strong,{children:"Tool-calling agents"})," reason using an ",(0,s.jsx)(e.strong,{children:"Open AI"})," LLM to plan a travel journey. Each agent is given a different responsibility defined by its ",(0,s.jsx)(e.strong,{children:"System Prompt"})," field."]}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.strong,{children:"Chat input"})," defines where the user wants to go, and passes the result to the ",(0,s.jsx)(e.strong,{children:"City Selection"})," agent. The ",(0,s.jsx)(e.strong,{children:"Local Expert"})," agent then adds information based on the selected cities, and the ",(0,s.jsx)(e.strong,{children:"Travel Concierge"})," assembles a seven day travel plan in Markdown."]}),"\n",(0,s.jsxs)(e.p,{children:["All agents have access to the ",(0,s.jsx)(e.strong,{children:"Search API"})," and ",(0,s.jsx)(e.strong,{children:"URL Content Fetcher"})," components, while only the Travel Concierge can use the ",(0,s.jsx)(e.strong,{children:"Calculator"})," for computing the trip costs."]}),"\n",(0,s.jsx)(e.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"/get-started-installation",children:"A running Langflow instance"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://platform.openai.com/",children:"An OpenAI API key"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.searchapi.io/",children:"A Search API key"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"open-langflow-and-start-a-new-flow",children:"Open Langflow and start a new flow"}),"\n",(0,s.jsxs)(e.p,{children:["Click ",(0,s.jsx)(e.strong,{children:"New Flow"}),", and then select the ",(0,s.jsx)(e.strong,{children:"Travel Planning Agent"})," flow."]}),"\n",(0,s.jsx)(e.p,{children:"This opens a starter flow with the necessary components to run an agentic application using multiple Tool-calling agents."}),"\n",(0,s.jsx)(e.h2,{id:"create-the-travel-planning-agent-flow",children:"Create the travel planning agent flow"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:t(17286).A+"",width:"2348",height:"1322"})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.strong,{children:"Travel Planning Agent"})," flow consists of these components:"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Multiple ",(0,s.jsx)(e.strong,{children:"Tool calling agent"})," components that use the connected LLM to reason through the user's input and select among the connected tools to complete their tasks."]}),"\n",(0,s.jsxs)(e.li,{children:["The ",(0,s.jsx)(e.strong,{children:"Calculator"})," component performs basic arithmetic operations."]}),"\n",(0,s.jsxs)(e.li,{children:["The ",(0,s.jsx)(e.strong,{children:"URL Content Fetcher"})," component scrapes content from a given URL."]}),"\n",(0,s.jsxs)(e.li,{children:["The ",(0,s.jsx)(e.strong,{children:"Chat Input"})," component accepts user input to the chat."]}),"\n",(0,s.jsxs)(e.li,{children:["The ",(0,s.jsx)(e.strong,{children:"Chat Output"})," component prints the flow's output to the chat."]}),"\n",(0,s.jsxs)(e.li,{children:["The ",(0,s.jsx)(e.strong,{children:"OpenAI"})," model component sends the user input and prompt to the OpenAI API and receives a response."]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"run-the-travel-planning-agent-flow",children:"Run the travel planning agent flow"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Add your credentials to the Open AI and Search API components."}),"\n",(0,s.jsxs)(e.li,{children:["Click ",(0,s.jsx)(e.strong,{children:"Playground"})," to start a chat session.\nYou should receive a detailed, helpful answer to the journey defined in the ",(0,s.jsx)(e.strong,{children:"Chat input"})," component."]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["Now that your query has completed the journey from ",(0,s.jsx)(e.strong,{children:"Chat input"})," to ",(0,s.jsx)(e.strong,{children:"Chat output"}),", you have completed the ",(0,s.jsx)(e.strong,{children:"Travel Planning Agent"})," flow."]})]})}function d(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(h,{...n})}):h(n)}}}]);